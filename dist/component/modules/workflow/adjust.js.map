{"version":3,"file":"adjust.js","sourceRoot":"","sources":["../../../../src/component/modules/workflow/adjust.ts"],"names":[],"mappings":"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","sourcesContent":["import Elements from '../elements'\nimport Direction from '../direction'\nimport Data from '../data'\n\nclass Adjust {\n\n  static run(direction, items) {\n    if (direction === Direction.top) {\n      self.runTop(items);\n    }\n    if (direction === Direction.bottom) {\n      self.runBottom(items);\n    }\n  }\n\n  static processInvisibleItems(items) {\n    for (let i = items.length - 1; i >= 0; i--) {\n      let element = items[i].element.children[0];\n      element.style.left = '';\n      element.style.position = '';\n      delete items[i].invisible;\n    }\n    return Math.abs(items[0].element.getBoundingClientRect().top - items[items.length - 1].element.getBoundingClientRect().bottom);\n  }\n\n  static runBottom(items) {\n    const height = self.processInvisibleItems(items);\n    const _paddingBottomHeight = parseInt(Elements.paddingBottom.style.height, 10) || 0;\n    const paddingBottomHeight = Math.max(_paddingBottomHeight - height, 0);\n    Elements.paddingBottom.style.height = paddingBottomHeight + 'px';\n  }\n\n  static runTop(items) {\n    const _scrollTop = Elements.viewport.scrollTop;\n    let height = self.processInvisibleItems(items);\n\n    // now need to make \"height\" pixels top\n    // 1) via paddingTop\n    let _paddingTopHeight = parseInt(Elements.paddingTop.style.height, 10) || 0;\n    let paddingTopHeight = Math.max(_paddingTopHeight - height, 0);\n    Elements.paddingTop.style.height = paddingTopHeight + 'px';\n    let paddingDiff = height - (_paddingTopHeight - paddingTopHeight);\n    // 2) via scrollTop\n    if (paddingDiff > 0) {\n      height = paddingDiff;\n      Elements.viewport.scrollTop += height;\n      const diff = height - Elements.viewport.scrollTop - _scrollTop;\n      if (diff > 0) {\n        let paddingHeight = parseInt(Elements.paddingBottom.style.height, 10) || 0;\n        Elements.paddingBottom.style.height = (paddingHeight + diff) + 'px';\n        Elements.viewport.scrollTop += diff;\n      }\n    }\n  }\n\n}\n\nconst self = Adjust;\nexport default Adjust\n"]}